
1、git客户端安装完成后，需要做的设置：
	git config --global user.name "xxx"
	git config --global user.email "xxxx@xx.com"

2、创建版本库 - 选择一个文件夹，进入文件夹后，执行命令：
	git init   （创建成功后会有.git目录，可用ls -ah来查看）

3、将文件提交到暂存区：
	git add <filename>

4、将文件从暂存区提交到版本库：（git commit只会提交暂存区的东西，工作区新的修改不会被提交）
	git commit -m "write some log"

5、查看当前版本库/工作区的状态，可知道哪些文件被修改过：
	git status

6、查看当前已修改文件的内容：
	git diff <filename>

7、查看历史版本提交记录：（带有HEAD标识的是当前版本）
	git log
	git log --pretty=oneline （格式化，好看些）

8、版本回退：
	（1）回退到上一个版本：
			git reset --hard HEAD^
	（2）回退到上上一个版本：
			git reset --hard HEAD^^
	（3）回退到某个指定版本：
			git reset --hard <commit id>

9、查看所有历史版本的commit id:
	git reflog

10、工作区、暂存区、版本库的理解
	（1）工作区就是我们代码所在的目录，在电脑上可见。
	（2）暂存区是工作区的文件git add之后存放的区域。它独立于工作区和版本库。里面的文件只能提交到版本库或者撤销到工作区，无法修改。
	（2）隐藏目录.git就是git的版本库，他跟我们代码在同一个目录下。

11、撤销修改：
	（1）撤销工作区的修改，撤销后文件回退至最近一次 git commit 或 git add 时的状态。
			git checkout -- <filename>
	（2）撤销暂存区的内容，撤销成功后，该内容回退到工作区，再用步骤1的操作就可以彻底清除该内容
			git reset HEAD <filename>

12、删除文件：
	（1）只删除本地。
			rm <filename>
	（2）删除本地版本库：
			git rm <filename>
	（3）本地工作区删除，但版本库中还有，可以做如下操作进行还原：
			git checkout -- <filename>

13、远程仓库：
	（1）添加远程仓库，需要先在github上创建一个空库。创建后得到库地址：https://github.com/dengying721/learngit.git
	（2）创建远程库后，本地git dash中使用如下命令将本地仓库与远程仓库关联：
			git remote add origin https://github.com/dengying721/learngit.git
	（3）将本地仓库的文件推送到远程仓库中：
			git push -u origin master （第一次推送，加-u）
			git push origin master （后续推送）
	（4）将远程仓库的文件clone到本地仓库中：（假如远程仓库的地址ssh地址为：git@github.com:michaelliao/gitskills.git）
			git clone git@github.com:michaelliao/gitskills.git
	（5）进行文件上传或者clone下载时，可以使用https协议或者通过ssh的git协议。git协议快，https协议每次都要验证登录。
	（6）本地机器需要生成公钥和私钥，然后将公钥添加到github的SSH key中，这样就能直接使用git协议了。
			（a）进入 ~/.ssh目录
			（b）使用ls查看是否有xx.pub文件，如果有，则直接复制其内的内容到github网站中添加公钥
			（c）如果没有.pub文件，则使用如下命令生成公钥和私钥（在.ssh目录下）：
					ssh-keygen -t rsa -C "your_email@example.com"
			（d）测试SSH key ： ssh -T git@github.com

14、分支管理
	（1）本地创建分支：
			git checkout -b dev （创建后默认切换到分支dev）
	（2）查看本地分支命令：
			git branch
	（3）查看远程仓库的分支命令：
			git branch -r
	（3）查看所有分支命令（包含本地和远程的所有分支，本地当前分支为绿色，本地其他分支为白色，远程分支一律为红色，且带有remotes标识）：
			git branch -a

	（4）本地分支间相互切换命令：
			git checkout master （切换到master分支）
	（5）本地分支代码合并到主干master：
			git merge dev （将分支dev的代码合并到master）
	（6）删除本地的分支：
			git branch -d dev  （删除本地的dev分支）
	（7）删除远程仓库上的分支：
			git push origin --delete dev （删除远程仓库上的dev分支）

15、modify the git-command on the branch of dev by time 16:20
